{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/selectors.js","redux/contacts/operations.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/ContactsView/ContactsView.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","visibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","ContactList","dispatch","useDispatch","useEffect","fetchContactRequest","get","then","data","fetchContactSuccess","catch","error","fetchContactError","list","useSelector","className","style","map","id","number","listItem","listItemName","listItemNumber","color","onClick","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","cursor","size","ContactForm","useState","setName","setNumber","handleInput","event","currentTarget","value","reset","title","contactForm","onSubmit","preventDefault","find","contact","alert","addContactRequest","post","addContactSuccess","addContactError","addContact","label","input","onChange","type","pattern","required","button","Filter","e","filterContacts","target","Contacts","length"],"mappings":"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","file":"static/js/4.6c551a29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"listItem\":\"ContactList_listItem__29Cbr\",\"listItemName\":\"ContactList_listItemName__39F1_\",\"listItemNumber\":\"ContactList_listItemNumber__3d8DW\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\",\"title\":\"ContactForm_title__3MqSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\n\nexport const visibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./actions\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nconst addContact = ({ name, number}) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport { addContact, deleteContact, fetchContacts };\n","import React from \"react\";\nimport style from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { visibleContacts } from \"../../redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { deleteContact, fetchContacts } from \"../../redux/contacts/operations\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n  const list = useSelector(visibleContacts);\n\n  return (\n    <div>\n      <ul className={style.list}>\n        {list.map(({ id, name, number }) => (\n          <li key={id} className={style.listItem}>\n            <span className={style.listItemName}>{name}:</span>\n            <span className={style.listItemNumber}>{number}</span>\n            <Delete\n              color=\"action\"\n              onClick={() => dispatch(deleteContact(id))}\n              cursor=\"pointer\"\n              size=\"large\"\n            ></Delete>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { getContacts} from \"../../redux/contacts/selectors\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport style from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const state = useSelector(getContacts);\n\n  const handleInput = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (\n      state.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`This name is already in contacts`);\n      reset();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <div>\n      <h3 className={style.title}>Add contact</h3>\n\n      <form className={style.contactForm} onSubmit={handleSubmit}>\n        <label className={style.label}>Name</label>\n        <input\n          className={style.input}\n          value={name}\n          onChange={handleInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label className={style.label}>Number</label>\n        <input\n          className={style.input}\n          value={number}\n          onChange={handleInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\nimport { filterContacts } from \"../../redux/contacts/actions\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(filterContacts(e.target.value))}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from \"react-redux\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\nexport default function Contacts() {\n  const items = useSelector(getContacts);\n  return (\n    <div className=\"container\">\n      <ContactForm />\n      {items.length > 0 && <Filter />}\n      <ContactList />\n    </div>\n  );\n}"],"sourceRoot":""}
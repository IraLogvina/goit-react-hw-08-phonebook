{"version":3,"sources":["redux/contacts/reducer.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","index.js","redux/auth/operations.js","redux/auth/selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/actions.js","redux/auth/reducer.js","components/UserMenu/UserMenu.module.css","components/Loader/Loader.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","components/Loader/Loader.module.css","redux/contacts/actions.js"],"names":["items","createReducer","fetchContactSuccess","_","payload","addContactSuccess","state","find","name","alert","deleteContactSuccess","filter","id","filterContacts","isLoading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","PrivateRoute","isAuthenticated","redirectTo","children","routeProps","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","to","PublicRoute","restricted","Container","className","styles","container","Navigation","nav","exact","link","activeClassName","activeLink","UserMenu","dispatch","useDispatch","getUserName","menu","button","type","onClick","authOperations","logOut","AuthNav","AppBar","header","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","useEffect","getCurrentUser","fallback","Loader","path","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","registerRequest","post","response","data","registerSuccess","registerError","status","toast","logIn","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","info","user","getLoading","getError","module","exports","createAction","initialUserState","email","setError","color","height","width","timeout"],"mappings":"6SAkBMA,EAAQC,YAAc,IAAD,mBACxBC,KAAsB,SAACC,EAAD,YAAMC,WADJ,cAExBC,KAAoB,SAACC,EAAD,GAAyB,IAAfF,EAAc,EAAdA,QAC7B,IAAIE,EAAMC,MAAK,qBAAGC,OAAoBJ,EAAQI,QAI9C,MAAM,CAAEJ,GAAR,mBAAoBE,IAHlBG,MAAM,GAAD,OAAIL,EAAQI,KAAZ,+BAJgB,cASxBE,KAAuB,SAACJ,EAAD,OAAUF,EAAV,EAAUA,QAAV,OACtBE,EAAMK,QAAO,qBAAGC,KAAgBR,QAVT,IAarBO,EAASV,YAAc,GAAD,eACzBY,KAAiB,SAACV,EAAD,YAAMC,YAGpBU,EAAYb,aAAc,GAAD,mBAC5Bc,KAAsB,kBAAM,KADA,cAE5Bb,KAAsB,kBAAM,KAFA,cAG5Bc,KAAoB,kBAAM,KAHE,cAI5BC,KAAoB,kBAAM,KAJE,cAK5BZ,KAAoB,kBAAM,KALE,cAM5Ba,KAAkB,kBAAM,KANI,cAO5BC,KAAuB,kBAAM,KAPD,cAQ5BT,KAAuB,kBAAM,KARD,cAS5BU,KAAqB,kBAAM,KATC,IAYzBC,EAAQpB,YAAc,MAAD,mBACxBe,KAAoB,SAACb,EAAD,YAAMC,WADF,cAExBc,KAAkB,SAACf,EAAD,YAAMC,WAFA,cAGxBgB,KAAqB,SAACjB,EAAD,YAAMC,WAHH,IAMZkB,cAAgB,CAC7BtB,QACAW,SACAG,YACAO,U,QCUIE,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,KACxCC,SAAUC,GAEZrB,aACAsB,UAAUC,IAGCC,EAAYC,YAAaX,G,oFCtFvB,SAASY,EAAT,GAKZ,EAJDC,gBAIE,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,EACF,iBACKC,EAAaC,YAAYC,IAAcC,oBAE7C,OACE,cAAC,IAAD,2BAAWJ,GAAX,aACGC,EAAaF,EAAW,cAAC,IAAD,CAAUM,GAAIP,O,kDCV9B,SAASQ,EAAT,GAKZ,EAJDT,gBAIE,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,EACF,iBACKC,EAAaC,YAAYC,IAAcC,oBAE7C,OACE,cAAC,IAAD,2BAAWJ,GAAX,aACGC,GAAcD,EAAWO,WACxB,cAAC,IAAD,CAAUF,GAAIP,IAEdC,K,qBCNOS,MARf,YAAkC,IAAbT,EAAY,EAAZA,SACnB,OAAO,qBAAKU,UAAWC,IAAOC,UAAvB,SAAmCZ,K,iBCC7B,SAASa,IACtB,IAAMX,EAAaC,YAAYC,IAAcC,oBAE7C,OACE,sBAAKK,UAAWC,IAAOG,IAAvB,UACE,cAAC,IAAD,CACER,GAAG,IACHS,OAAK,EACLL,UAAWC,IAAOK,KAClBC,gBAAiBN,IAAOO,WAJ1B,kBASChB,GACC,cAAC,IAAD,CACEI,GAAG,YACHS,OAAK,EACLL,UAAWC,IAAOK,KAClBC,gBAAiBN,IAAOO,WAJ1B,yB,qBChBO,SAASC,IACtB,IAAMC,EAAWC,cACXjE,EAAO+C,YAAYC,IAAckB,aAEvC,OACE,sBAAKZ,UAAWC,IAAOY,KAAvB,UACE,uBAAMb,UAAWC,IAAOvD,KAAxB,sBAAwCA,KACxC,wBACEsD,UAAWC,IAAOa,OAClBC,KAAK,SACLC,QAAS,kBAAMN,EAASO,IAAeC,WAHzC,wB,qBCRS,SAASC,IACtB,OACE,sBAAKnB,UAAWC,IAAOG,IAAvB,UACE,cAAC,IAAD,CACER,GAAG,YACHS,OAAK,EACLL,UAAWC,IAAOK,KAClBC,gBAAiBN,IAAOO,WAJ1B,qBASA,cAAC,IAAD,CACEZ,GAAG,SACHS,OAAK,EACLL,UAAWC,IAAOK,KAClBC,gBAAiBN,IAAOO,WAJ1B,uB,qBCRS,SAASY,KACtB,IAAM5B,EAAaC,YAAYC,IAAcC,oBAE7C,OACE,yBAAQK,UAAWC,IAAOoB,OAA1B,UACE,cAAClB,EAAD,IAECX,EAAa,cAACiB,EAAD,IAAe,cAACU,EAAD,O,sBCF7BG,I,OAAWC,gBAAK,kBAAM,kCACtBC,GAAeD,gBAAK,kBAAM,iCAC1BE,GAAYF,gBAAK,kBAAM,iCACvBG,GAAeH,gBAAK,kBAAM,uDAC1BI,GAAeJ,gBAAK,kBAAM,iCAEjB,SAASK,KACtB,IAAMlB,EAAWC,cAMjB,OAJAkB,qBAAU,WACRnB,EAASO,IAAea,oBACvB,CAACpB,IAGF,eAAC,EAAD,WACE,cAACU,GAAD,IAEA,cAAC,WAAD,CAAUW,SAAU,cAACC,GAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAACnC,EAAD,CAAaoC,KAAK,IAAI5B,OAAK,EAA3B,SACE,cAACiB,GAAD,MAGF,cAACzB,EAAD,CAAaoC,KAAK,YAAYnC,YAAU,EAACT,WAAW,YAApD,SACE,cAACmC,GAAD,MAGF,cAAC3B,EAAD,CAAaoC,KAAK,SAASnC,YAAU,EAACT,WAAW,YAAjD,SACE,cAACoC,GAAD,MAGF,cAACtC,EAAD,CAAc8C,KAAK,YAAY5C,WAAW,SAA1C,SACE,cAACqC,GAAD,MAGF,cAAC,IAAD,UACE,cAACC,GAAD,WAKN,cAAC,KAAD,CAAgBO,UAAW,U,OC5CjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9D,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAa+D,QAAS,KAAMrD,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAAC2C,GAAD,YAKRW,SAASC,eAAe,U,iiBCF1BC,IAAMC,SAASC,QAAU,wCAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAIrCC,EAAW,SAACC,GAAD,8CAAiB,WAAOvC,GAAP,eAAAwC,EAAA,6DACvCxC,EAASyC,eAD8B,kBAIdV,IAAMW,KAAK,gBAAiBH,GAJd,OAI/BI,EAJ+B,OAMrCT,EAAUS,EAASC,KAAKV,OACxBlC,EAAS6C,YAAgBF,EAASC,OAPG,gDASrC5C,EAAS8C,YAAc,EAAD,KAEQ,MAA1B,KAAMH,SAASI,OACjBC,IAAMnG,MAAM,+BACuB,MAA1B,KAAM8F,SAASI,OACxBC,IAAMnG,MAAM,yCAEbmG,IAAMnG,MAAM,6BAhBwB,yDAAjB,uDAqBXoG,EAAQ,SAACV,GAAD,8CAAiB,WAAOvC,GAAP,eAAAwC,EAAA,6DACpCxC,EAASkD,eAD2B,kBAIXnB,IAAMW,KAAK,eAAgBH,GAJhB,OAI5BI,EAJ4B,OAMlCT,EAAUS,EAASC,KAAKV,OACxBlC,EAASmD,YAAaR,EAASC,OAPG,gDASlC5C,EAASoD,YAAW,EAAD,KACnBJ,IAAMnG,MAAM,8BAVsB,yDAAjB,uDAcR2D,EAAS,yDAAM,WAAOR,GAAP,SAAAwC,EAAA,6DAC1BxC,EAASqD,eADiB,kBAIlBtB,IAAMW,KAAK,iBAJO,OAMxBR,IACAlC,EAASsD,eAPe,gDASxBtD,EAASuD,YAAY,EAAD,KAEU,MAA1B,KAAMZ,SAASI,OACjBC,IAAMnG,MAAM,yCAGZmG,IAAMnG,MAAM,qDAfU,yDAAN,uDAoBTuE,EAAiB,yDAAM,WAAOpB,EAAUwD,GAAjB,mBAAAhB,EAAA,2DAG9BgB,IADaC,EAFiB,EAEhCzF,KAAQkE,MAFwB,wDASlCA,EAAUuB,GACVzD,EAAS0D,eAVyB,kBAaT3B,IAAM4B,IAAI,kBAbD,OAa1BhB,EAb0B,OAehC3C,EAAS4D,YAAsBjB,EAASC,OAfR,kDAiBhC5C,EAAS6D,YAAoB,EAAD,KAC5B3B,IACAc,IAAMc,KAAK,6CAnBqB,0DAAN,yDCnFjB7E,EAAqB,SAACnD,GAAD,OAAWA,EAAMkC,KAAKU,iBAC3CwB,EAAc,SAACpE,GAAD,OAAWA,EAAMkC,KAAK+F,KAAK/H,MACzCgI,EAAa,SAAClI,GAAD,OAAWA,EAAMkC,KAAK1B,WACnC2H,EAAW,SAACnI,GAAD,OAAWA,EAAMkC,KAAKnB,Q,mBCF9CqH,EAAOC,QAAU,CAAC,IAAM,wBAAwB,KAAO,yBAAyB,WAAa,iC,mBCA7FD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,KAAO,sBAAsB,WAAa,8B,+BCDvF,maAEa1B,EAAkB2B,YAAa,wBAC/BvB,EAAkBuB,YAAa,wBAC/BtB,EAAgBsB,YAAa,sBAE7BlB,EAAekB,YAAa,qBAC5BjB,EAAeiB,YAAa,qBAC5BhB,EAAagB,YAAa,mBAE1Bf,EAAgBe,YAAa,sBAC7Bd,EAAgBc,YAAa,sBAC7Bb,EAAca,YAAa,oBAE3BV,EAAwBU,YAAa,8BACrCR,EAAwBQ,YAAa,8BACrCP,EAAsBO,YAAa,6B,0ECA1CC,EAAmB,CACvBrI,KAAM,KACNsI,MAAO,MAGHP,EAAOtI,YAAc4I,GAAD,mBACvBxB,KAAkB,SAAClH,EAAD,YAAMC,QAAsBmI,QADvB,cAEvBZ,KAAe,SAACxH,EAAD,YAAMC,QAAsBmI,QAFpB,cAGvBT,KAAgB,kBAAMe,KAHC,cAIvBT,KAAwB,SAACjI,EAAD,YAAMC,WAJP,IAOpBsG,EAAQzG,YAAc,MAAD,mBACxBoH,KAAkB,SAAClH,EAAD,YAAMC,QAAsBsG,SADtB,cAExBiB,KAAe,SAACxH,EAAD,YAAMC,QAAsBsG,SAFnB,cAGxBoB,KAAgB,kBAAM,QAHE,IAMrBiB,EAAW,SAAC5I,EAAD,YAAMC,SAEjBiB,EAAQpB,YAAc,MAAD,mBACxBqH,IAAgByB,GADQ,cAExBnB,IAAamB,GAFW,cAGxBhB,IAAcgB,GAHU,cAIxBV,IAAsBU,GAJE,cAKxB9B,KAAkB,kBAAM,QALA,cAMxBS,KAAe,kBAAM,QANG,cAOxBG,KAAgB,kBAAM,QAPE,cAQxBK,KAAwB,kBAAM,QARN,IAWrBhF,EAAkBjD,aAAc,GAAD,mBAClCoH,KAAkB,kBAAM,KADU,cAElCM,KAAe,kBAAM,KAFa,cAGlCS,KAAwB,kBAAM,KAHI,cAIlCd,KAAgB,kBAAM,KAJY,cAKlCM,KAAa,kBAAM,KALe,cAMlCS,KAAsB,kBAAM,KANM,cAOlCP,KAAgB,kBAAM,KAPY,IAU/BhH,EAAYb,aAAc,GAAD,mBAC5BgH,KAAkB,kBAAM,KADI,cAE5BI,KAAkB,kBAAM,KAFI,cAG5BC,KAAgB,kBAAM,KAHM,cAI5BI,KAAe,kBAAM,KAJO,cAK5BC,KAAe,kBAAM,KALO,cAM5BC,KAAa,kBAAM,KANS,cAO5BC,KAAgB,kBAAM,KAPM,cAQ5BC,KAAgB,kBAAM,KARM,cAS5BC,KAAc,kBAAM,KATQ,cAU5BG,KAAwB,kBAAM,KAVF,cAW5BE,KAAwB,kBAAM,KAXF,cAY5BC,KAAsB,kBAAM,KAZA,IAehB/G,gBAAgB,CAC7BiH,OACArF,kBACAwD,QACArF,QACAP,e,mBC5EF4H,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,oHCGxE,SAAS7C,IACtB,OACE,qBAAKhC,UAAWC,IAAO+B,OAAvB,SACE,cAAC,IAAD,CACEjB,KAAK,eACLmE,MAAM,QACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,U,mBCXjBT,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,+BCD3B,+VAGa5H,EAAsB6H,YAAa,gCACnC1I,EAAsB0I,YAAa,gCACnC5H,EAAoB4H,YAAa,8BAEjC3H,EAAoB2H,YAAa,8BACjCvI,EAAoBuI,YAAa,8BACjC1H,EAAkB0H,YAAa,4BAE/BzH,EAAuByH,YAClC,iCAEWlI,EAAuBkI,YAClC,iCAEWxH,EAAqBwH,YAAa,+BAYlC/H,EAAiB+H,YAAa,6B","file":"static/js/main.111bb9af.chunk.js","sourcesContent":["// redux-toolkit\n\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import actions from \"./actions\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.find(({ name }) => name === payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      return;\n    }\n    return [payload, ...state];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n\n// redux;\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (\n//         state.find(\n//           (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n//         )\n//       ) {\n//         alert(`${payload.name} is already in contacts`);\n\n//       }\n//     return [payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","// import { configureStore } from \"@reduxjs/toolkit\";\n// import {\n// persistStore,\n// persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import logger from \"redux-logger\";\n// import contactsReducer from \"./contacts/reducer\";\n\n// const middleware = (getDefaultMiddleware) =>\n//   getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }).concat(logger);\n\n// const contactsPersistConfig = {\n//   key: \"items\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: contactsReducer,\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// const persistor = persistStore(store);\n\n// export default store;\n\n// redux\n\n// import { createStore, combineReducers } from 'redux';\n// import contactsReducer from './reducer';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/reducer\";\nimport authReducer from \"./auth/reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport styles from \"./Navigation.module.css\";\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav className={styles.nav}>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport styles from \"./UserMenu.module.css\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <div className={styles.menu}>\n      <span className={styles.name}>Welcome, {name}</span>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </button>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={styles.nav}>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Sign up\n      </NavLink>\n\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Log in\n      </NavLink>\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className={styles.header}>\n      <Navigation />\n\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}","import { lazy, Suspense, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport Container from \"./components/Container\";\nimport AppBar from \"./components/AppBar\";\nimport LoaderComponent from \"./components/Loader\";\nimport { authOperations } from \"./redux/auth\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\nconst NotFoundView = lazy(() => import(\"./views/NotFoundView\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<LoaderComponent />}>\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n\n          <Route>\n            <NotFoundView />\n          </Route>\n        </Switch>\n      </Suspense>\n\n      <ToastContainer autoClose={3500} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from \"axios\";\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./actions\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = (credentials) => async (dispatch) => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error));\n\n    if (error.response.status === 400) {\n      toast.error(\"This user is already exist!\");\n    } else if (error.response.status === 500) {\n      toast.error(\"Server error! Please try again later!\");\n    } else {\n     toast.error(\"Oops, something is wrong!\");\n    }\n  }\n};\n\nexport const logIn = (credentials) => async (dispatch) => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error));\n    toast.error(\"Invalid email or password!\");\n  }\n};\n\nexport const logOut = () => async (dispatch) => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error));\n\n    if (error.response.status === 500) {\n      toast.error(\"Server error! Please try again later!\");\n    } else \n    {\n      toast.error(\"Opps, something is wrong! Please reload the page!\");\n    }\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error));\n    token.unset();\n    toast.info(\"Your session is over. Please login again!\");\n  }\n};\n","export const getIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const getUserName = (state) => state.auth.user.name;\nexport const getLoading = (state) => state.auth.isLoading;\nexport const getError = (state) => state.auth.error;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__INfuO\",\"link\":\"Navigation_link__12o2K\",\"activeLink\":\"Navigation_activeLink__2rUFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNav_nav__2hyWw\",\"link\":\"AuthNav_link__2ejsg\",\"activeLink\":\"AuthNav_activeLink__3huQJ\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './actions';\n\nconst initialUserState = {\n  name: null,\n  email: null,\n};\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n  [registerRequest]: () => null,\n  [loginRequest]: () => null,\n  [logoutRequest]: () => null,\n  [getCurrentUserRequest]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nconst isLoading = createReducer(false, {\n  [registerRequest]: () => true,\n  [registerSuccess]: () => false,\n  [registerError]: () => false,\n  [loginRequest]: () => true,\n  [loginSuccess]: () => false,\n  [loginError]: () => false,\n  [logoutRequest]: () => true,\n  [logoutSuccess]: () => false,\n  [logoutError]: () => false,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n  isLoading,\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"UserMenu_menu__1yCWo\",\"name\":\"UserMenu_name__3e8KV\",\"button\":\"UserMenu_button__3mTE-\"};","import React from \"react\";\nimport LoaderComponent from \"react-loader-spinner\";\nimport styles from \"./Loader.module.css\";\n\nexport default function Loader() {\n  return (\n    <div className={styles.Loader}>\n      <LoaderComponent\n        type=\"BallTriangle\"\n        color=\"white\"\n        height={120}\n        width={120}\n        timeout={2000}\n      />\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__17sQZ\"};","// import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\n// const addContact = createAction(\"contacts/add\", (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction(\"contacts/delete\");\n\nexport const filterContacts = createAction(\"contacts/filterContacts\");\n\n//redux\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = (id) => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\n// const filterContacts = (value) => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\n"],"sourceRoot":""}